const r=l=>{l.StyleManager.addType("aris-custom-prop",{create({props:e,change:a}){const t=document.createElement("div");t.innerHTML=`<input type="range" class="my-input" min="${e.min}" max="${e.max}"/>`;const n=t.querySelector(".my-input");return n.addEventListener("change",s=>a({event:s})),n.addEventListener("input",s=>a({event:s,partial:!0})),t},emit({props:e,updateStyle:a},{event:t,partial:n}){const{value:s}=t.target;a(`${s}px`,{partial:n})},update({value:e,el:a}){a.querySelector(".my-input").value=parseInt(e,10)},destroy(){}})},u=l=>{l.StyleManager.addType("aris-custom-select",{create({props:e,change:a}){const t=document.createElement("div");t.classList="gjs-field gjs-select";const n=document.createElement("select");return n.className="my-select",e.options&&Array.isArray(e.options)&&e.options.forEach(s=>{const c=document.createElement("option");c.value=s.value,c.text=s.name,e.default&&e.default===s.value&&(c.selected=!0),n.appendChild(c)}),n.addEventListener("change",s=>a({event:s})),t.appendChild(n),t},emit({props:e,updateStyle:a},{event:t}){const{value:n}=t.target;a(n)},update({value:e,el:a}){const t=a.querySelector(".my-select");t&&(t.value=e)},destroy(){}})},i={customType:r,customTypeSelect:u};export{i as S};
